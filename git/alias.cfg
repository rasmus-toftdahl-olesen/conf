[alias]
    lg1 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
    lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
    lg=!git lg1
    st=status
    ci=commit
    co=checkout
    cb=checkout -b
    cm=checkout master
    review=push -u origin HEAD -o merge_request.create -o merge_request.target=master -o merge_request.remove_source_branch
    mergetomaster=push -u origin HEAD -o merge_request.create -o merge_request.target=master -o merge_request.remove_source_branch -o merge_request.merge_when_pipeline_succeeds
    rb = "! f() { BRANCH=\\$(git rev-parse --abbrev-ref HEAD); git cm && git fp && git co \"\\$BRANCH\" && git rebase master; }; f"
    ll = log --oneline -10
    #lg = log --oneline --graph -10  --decorate
    pr = pull --rebase
